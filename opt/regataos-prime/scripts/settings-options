#!/bin/bash

# Detect system language
user=$(users | awk '{print $1}')

if test -e "/home/$user/.config/plasma-localerc" ; then
	language=$(grep -r LANGUAGE= "/home/$user/.config/plasma-localerc" | cut -d"=" -f 2- | cut -d":" -f -1 | tr [A-Z] [a-z] | sed 's/_/-/')

	if [ -z $language ]; then
    	language=$(grep -r LANG= "/home/$user/.config/plasma-localerc" | cut -d"=" -f 2- | cut -d"." -f -1 | tr [A-Z] [a-z] | sed 's/_/-/')
	fi

elif test -e "/home/$user/.config/user-dirs.locale" ; then
    language=$(cat "/home/$user/.config/user-dirs.locale" | tr [A-Z] [a-z] | sed 's/_/-/')

else
    language=$(echo $LANG | tr [A-Z] [a-z] | sed 's/_/-/' | cut -d"." -f -1)
fi

# Configure application language
if test -e "/opt/regataos-prime/scripts/notifications/$language"
	scriptNotify="/opt/regataos-prime/scripts/notifications/$language"
else
	scriptNotify="/opt/regataos-prime/scripts/notifications/en-us"
fi

# Enable/Disable TearFree
function tearfree() {
	if [[ $(cat /tmp/regataos-prime/config/regataos-prime.conf) == *"tearfree=on"* ]]; then
		sed -i 's/\(tearfree=on\)/tearfree=off/' "/tmp/regataos-prime/config/regataos-prime.conf"
		sudo /opt/regataos-prime/scripts/gpu-render -tearfree-off

		#For NVIDIA Driver
		sleep 3
		nvidia-settings --assign CurrentMetaMode="nvidia-auto-select +0+0 { ForceFullCompositionPipeline = Off }"

		#For open source drivers
		screen=$(xrandr --props | grep 'connected primary' | awk '{print $1}')
		xrandr --output $screen --set TearFree off

		# Show notify on desktop
		/bin/bash $scriptNotify -tearfree-off

	elif [[ $(cat /tmp/regataos-prime/config/regataos-prime.conf) == *"tearfree=off"* ]]; then
		sed -i 's/\(tearfree=off\)/tearfree=on/' "/tmp/regataos-prime/config/regataos-prime.conf"
		sudo /opt/regataos-prime/scripts/gpu-render -tearfree-on

		#For NVIDIA Driver
		sleep 3
		nvidia-settings --assign CurrentMetaMode="nvidia-auto-select +0+0 { ForceFullCompositionPipeline = On }"

		#For open source drivers
		screen=$(xrandr --props | grep 'connected primary' | awk '{print $1}')
		xrandr --output $screen --set TearFree on

		# Show notify on desktop
		/bin/bash $scriptNotify -tearfree-on

	else
		echo "Option not found in the file with configuration options."
	fi
}

# Enable/Disable FreeSync
function enable_freesync() {
	screen=$(xrandr --props | grep 'connected primary' | awk '{print $1}')
	echo "Enabling FreeSync on $screen"
	DISPLAY=:0 xrandr --output $screen --set "freesync" 1
	xrandr --output $screen --set "freesync" 1
	sed -i 's/\(freesync=off\)/freesync=on/' "/tmp/regataos-prime/config/regataos-prime.conf"

	# Show notify on desktop
	/bin/bash $scriptNotify -tearfree-on
}

function disable_freesync() {
	screen=$(xrandr --props | grep 'connected primary' | awk '{print $1}')
	echo "Disabling FreeSync on $screen"
	DISPLAY=:0 xrandr --output $screen --set "freesync" 0
	xrandr --output $screen --set "freesync" 0
	sed -i 's/\(freesync=on\)/freesync=off/' "/tmp/regataos-prime/config/regataos-prime.conf"

	# Show notify on desktop
	/bin/bash $scriptNotify -tearfree-off
}

# Configuration option for KWin compositing
function compositor() {
	# Check if the "compositor" option is present in the configuration file
	if [[ $(grep -r "compositor=" "/tmp/regataos-prime/config/regataos-prime.conf") != *"compositor="* ]]; then
		echo "compositor=on" >> "$HOME/.config/regataos-prime/regataos-prime.conf"
		sed -i '/^$/d' "$HOME/.config/regataos-prime/regataos-prime.conf"
	fi

	# Disable or enable KWin compositing
	if [[ $(cat /tmp/regataos-prime/config/regataos-prime.conf) == *"compositor=on"* ]]; then
		sed -i 's/\(compositor=on\)/compositor=off/' "/tmp/regataos-prime/config/regataos-prime.conf"
		qdbus-qt5 org.kde.KWin /Compositor suspend

		# Show notify on desktop
		sleep 2
		/bin/bash $scriptNotify -compositor-off

	elif [[ $(cat /tmp/regataos-prime/config/regataos-prime.conf) == *"compositor=off"* ]]; then
		sed -i 's/\(compositor=off\)/compositor=on/' "/tmp/regataos-prime/config/regataos-prime.conf"
		qdbus-qt5 org.kde.KWin /Compositor resume

		# Show notify on desktop
		sleep 2
		/bin/bash $scriptNotify -compositor-on

	else
		sed -i 's/\(compositor=on\)/compositor=off/' "/tmp/regataos-prime/config/regataos-prime.conf"
		qdbus-qt5 org.kde.KWin /Compositor suspend

		# Show notify on desktop
		sleep 2
		/bin/bash $scriptNotify -compositor-off
	fi
}

# Configuration option to unlock widgets
function unlock_widgets() {
	# Check if the "compositor" option is present in the configuration file
	if [[ $(grep -r "unlockwidgets=" "/tmp/regataos-prime/config/regataos-prime.conf") != *"unlockwidgets="* ]]; then
		echo "unlockwidgets=off" >> "$HOME/.config/regataos-prime/regataos-prime.conf"
		sed -i '/^$/d' "$HOME/.config/regataos-prime/regataos-prime.conf"
	fi

	# Disable or enable KWin compositing
	if [[ $(cat /tmp/regataos-prime/config/regataos-prime.conf) == *"unlockwidgets=on"* ]]; then
		sed -i 's/\(unlockwidgets=on\)/unlockwidgets=off/' "/tmp/regataos-prime/config/regataos-prime.conf"
		qdbus-qt5 org.kde.plasmashell /PlasmaShell evaluateScript "lockCorona(false)"

		# Show notify on desktop
		sleep 2
		/bin/bash $scriptNotify -unlockwidgets-off

	elif [[ $(cat /tmp/regataos-prime/config/regataos-prime.conf) == *"unlockwidgets=off"* ]]; then
		sed -i 's/\(unlockwidgets=off\)/unlockwidgets=on/' "/tmp/regataos-prime/config/regataos-prime.conf"
		qdbus-qt5 org.kde.plasmashell /PlasmaShell evaluateScript "lockCorona(true)"

		# Show notify on desktop
		sleep 2
		/bin/bash $scriptNotify -unlockwidgets-on

	else
		sed -i 's/\(unlockwidgets=on\)/unlockwidgets=off/' "/tmp/regataos-prime/config/regataos-prime.conf"
		qdbus-qt5 org.kde.plasmashell /PlasmaShell evaluateScript "lockCorona(false)"

		# Show notify on desktop
		sleep 2
		/bin/bash $scriptNotify -unlockwidgets-off
	fi
}

# Configuration option to amf
function configure_amf() {
	# Check if the "amf" option is present in the configuration file
	if [[ $(grep -r "amf=" "/tmp/regataos-prime/config/regataos-prime.conf") != *"amf="* ]]; then
		echo "amf=off" >> "$HOME/.config/regataos-prime/regataos-prime.conf"
		sed -i '/^$/d' "$HOME/.config/regataos-prime/regataos-prime.conf"
	fi

	# Enable or Disable AMD AMF
	if [[ $(cat /tmp/regataos-prime/config/regataos-prime.conf) == *"amf=on"* ]]; then
		sed -i 's/\(amf=on\)/amf=off/' "/tmp/regataos-prime/config/regataos-prime.conf"
		sudo /opt/regataos-prime/scripts/enable-amd-amf -amf-off

		# Show notify on desktop
		sleep 2
		/bin/bash $scriptNotify -amf-off

	elif [[ $(cat /tmp/regataos-prime/config/regataos-prime.conf) == *"amf=off"* ]]; then
		sed -i 's/\(amf=off\)/amf=on/' "/tmp/regataos-prime/config/regataos-prime.conf"
		sudo /opt/regataos-prime/scripts/enable-amd-amf -amf-on

		# Show notify on desktop
		sleep 2
		/bin/bash $scriptNotify -amf-on

	else
		sed -i 's/\(amf=on\)/amf=off/' "/tmp/regataos-prime/config/regataos-prime.conf"
		sudo /opt/regataos-prime/scripts/enable-amd-amf -amf-on

		# Show notify on desktop
		sleep 2
		/bin/bash $scriptNotify -amf-off
	fi
}

function copy_info() {
	/bin/bash /opt/regataos-prime/scripts/prime-info.sh
	cat /tmp/regataos-prime/prime-info.txt | xclip -sel clip

	# Show notify on desktop
	sleep 2
	/bin/bash $scriptNotify -copy-info
}

case $1 in
   "-tearfree") tearfree
         ;;
   "-freesync-on") enable_freesync
         ;;
   "-freesync-off") disable_freesync
         ;;
   "-compositor") compositor
         ;;
   "-unlockwidgets") unlock_widgets
         ;;
   "-amf") configure_amf
         ;;
   "-copy-info") copy_info
         ;;
   *) echo "Invalid option!"
      exit 1
      ;;
esac
